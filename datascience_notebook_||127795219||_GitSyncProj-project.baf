{"dslabserviceresp":{"queryService":[],"bizvizWorkspace":"{\"reserv1\":null,\"reserv2\":null,\"reserv3\":null,\"reserv4\":null,\"reserv5\":null,\"createdDate\":1706013607976,\"isActive\":0,\"lastUpdatedDate\":null,\"active\":1,\"migrationId\":null,\"id\":127795219,\"name\":\"GitSyncProj\",\"count\":null,\"parentId\":null,\"userId\":\"117080066\",\"isFile\":false,\"infoJson\":\"{\\\"imageVersion\\\":\\\"8.6.0\\\",\\\"external_libraries\\\":\\\"\\\",\\\"imageName\\\":\\\"371194629034.dkr.ecr.ap-south-1.amazonaws.com/rel/8.6/dsnotebook-tensorflow\\\",\\\"confDetails\\\":{\\\"high\\\":{\\\"nonspark\\\":{\\\"request\\\":{\\\"memory\\\":\\\"2048Mi\\\",\\\"cpu\\\":\\\"1000m\\\"},\\\"limit\\\":{\\\"memory\\\":\\\"4048Mi\\\",\\\"cpu\\\":\\\"2500m\\\"}}},\\\"low\\\":{\\\"realtime\\\":{\\\"nonspark\\\":{\\\"request\\\":{\\\"memory\\\":\\\"1024Mi\\\",\\\"cpu\\\":\\\"500m\\\"},\\\"limit\\\":{\\\"memory\\\":\\\"1024Mi\\\",\\\"cpu\\\":\\\"1000m\\\"}}}},\\\"medium\\\":{\\\"nonspark\\\":{\\\"request\\\":{\\\"memory\\\":\\\"4096Mi\\\",\\\"cpu\\\":\\\"1000m\\\"},\\\"limit\\\":{\\\"memory\\\":\\\"5048Mi\\\",\\\"cpu\\\":\\\"1000m\\\"}}}},\\\"idle_shutdown\\\":\\\"30m\\\",\\\"apiImageVersion\\\":\\\"8.6.0\\\",\\\"appName\\\":\\\"\\\",\\\"git_project\\\":\\\"\\\",\\\"project_url\\\":\\\"himanshusingh1412/BDBProject\\\",\\\"project_name\\\":\\\"GitSyncProj\\\",\\\"removedLibraries\\\":\\\"\\\",\\\"isGitsyncProject\\\":true,\\\"environment\\\":\\\"PythonTensorFlow\\\",\\\"project_description\\\":\\\"\\\",\\\"Algorithms\\\":\\\"\\\",\\\"gpuLimit\\\":\\\"\\\",\\\"projectLabel\\\":\\\"BDBProject\\\",\\\"resource_allocation\\\":\\\"medium\\\",\\\"configured_branch\\\":\\\"main\\\",\\\"apiImageName\\\":\\\"371194629034.dkr.ecr.ap-south-1.amazonaws.com/rel/8.6/dsmodelapi\\\",\\\"gpuType\\\":\\\"\\\",\\\"branchLabel\\\":\\\"main\\\"}\",\"spaceKey\":\"4625\",\"type\":10,\"status\":1,\"contentJson\":\"{\\\"CreateProjectKey\\\":\\\"Create_Project\\\"}\",\"templateJson\":null,\"isShared\":null,\"updatedBy\":null,\"uuid\":\"46251706013607976\",\"createdUserName\":null}","envVariables":"[]","utility":"[]","sandboxService":[],"secrets":"{\"reserv1\":null,\"reserv2\":null,\"reserv3\":null,\"reserv4\":null,\"reserv5\":null,\"createdDate\":null,\"isActive\":0,\"lastUpdatedDate\":null,\"active\":1,\"migrationId\":null,\"id\":5537798,\"type\":\"210\",\"status\":1,\"spaceKey\":\"1156\",\"settings\":\"[{\\\"secretDetails\\\":[\\\"DM_USERNAME    \\\",\\\"DM_PASSWORD            \\\",\\\"DM_HTTP_PORT    \\\",\\\"DM_HOST    \\\"],\\\"secretkey\\\":\\\"MYSQL\\\"}]\"}","dataSource":[],"notebook":"[{\"migrationId\":null,\"id\":127860926,\"projectId\":127795219,\"spaceKey\":\"4625\",\"notebookName\":\"main_fun.ipynb\",\"data\":\"{\\\"datasets\\\":\\\"[]\\\"}\",\"description\":\"gitsync notebook\",\"createdDate\":1706022704392,\"lastUpdatedDate\":1706022704583,\"createdBy\":117080066,\"updatedBy\":117080066,\"status\":1,\"committedBy\":null,\"lastcommittedDate\":null,\"isShared\":null,\"customComponentscript\":null,\"type\":1,\"isScheduled\":null,\"isImported\":2,\"path\":\"Repo/main_fun.ipynb\",\"uuid\":\"46251706022704583\"},{\"migrationId\":null,\"id\":127860925,\"projectId\":127795219,\"spaceKey\":\"4625\",\"notebookName\":\"himanshu_test.ipynb\",\"data\":\"{\\\"Algorithms\\\":[],\\\"filename\\\":\\\"himanshu_test.ipynb\\\",\\\"last_modified_date\\\":\\\"\\\",\\\"isScheduled\\\":0,\\\"datasets\\\":[],\\\"kernalID\\\":\\\"d6d7d2f6-2cf9-47d3-89c1-60c910b838d2\\\",\\\"uncheckeddatasets\\\":[]}\",\"description\":\"gitsync notebook\",\"createdDate\":1706022704015,\"lastUpdatedDate\":1706024918114,\"createdBy\":117080066,\"updatedBy\":117080066,\"status\":1,\"committedBy\":null,\"lastcommittedDate\":null,\"isShared\":null,\"customComponentscript\":\"{\\\"DSLAB_content\\\":\\\"[{\\\\\\\"id\\\\\\\":\\\\\\\"127860925_0.1994134166793602\\\\\\\",\\\\\\\"code\\\\\\\":\\\\\\\"import pandas as pd\\\\\\\\nimport numpy as np\\\\\\\\nfrom datetime import datetime, timedelta\\\\\\\\nimport logging\\\\\\\\n\\\\\\\\n\\\\\\\\ndef generate_sales_data(num_records=1000):\\\\\\\\n    np.random.seed(0)  # For reproducibility\\\\\\\\n    dates = [datetime.now() - timedelta(days=i) for i in range(num_records)]\\\\\\\\n    product_ids = np.random.randint(1000, 2000, num_records)\\\\\\\\n    quantities = np.random.randint(1, 10, num_records)\\\\\\\\n    unit_price = np.random.uniform(10, 500, num_records)\\\\\\\\n    customer_ids = np.random.randint(10000, 20000, num_records)\\\\\\\\n\\\\\\\\n\\\\\\\\n    data = {\\\\\\\\n        'Date': dates,\\\\\\\\n        'ProductID': product_ids,\\\\\\\\n        'Quantity': quantities,\\\\\\\\n        'UnitPrice': unit_price,\\\\\\\\n        'CustomerID': customer_ids\\\\\\\\n        # ... add other columns here\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    df = pd.DataFrame(data)\\\\\\\\n    return df\\\\\\\\n\\\\\\\\n\\\\\\\\ndef clean_data(df):\\\\\\\\n\\\\\\\\n    df = df[df['UnitPrice'] > 0]\\\\\\\\n\\\\\\\\n    return df\\\\\\\\n\\\\\\\\n\\\\\\\\ndef transform_data(df):\\\\\\\\n    df['TotalSales'] = df['Quantity'] * df['UnitPrice']\\\\\\\\n\\\\\\\\n    return df\\\\\\\\n\\\\\\\\n\\\\\\\\ndef calculate_kpis(df):\\\\\\\\n    total_sales = df['TotalSales'].sum()\\\\\\\\n    average_sales_per_item = df['TotalSales'].mean()\\\\\\\\n    \\\\\\\\n    sales_growth = df['TotalSales'].pct_change().mean() * 100\\\\\\\\n\\\\\\\\n    kpis = {\\\\\\\\n        'Total Sales': total_sales,\\\\\\\\n        'Average Sales per Item': average_sales_per_item,\\\\\\\\n        'Sales Growth': sales_growth\\\\\\\\n    }\\\\\\\\n    return kpis\\\\\\\\n\\\\\\\\ndef main():\\\\\\\\n    sales_data = generate_sales_data()\\\\\\\\n    cleaned_data = clean_data(sales_data)\\\\\\\\n    transformed_data = transform_data(cleaned_data)\\\\\\\\n    kpis = calculate_kpis(transformed_data)\\\\\\\\n    logging.info(\\\\\\\\\\\\\\\"=============\\\\\\\\\\\\\\\")\\\\\\\\n    print(kpis)\\\\\\\\n    logging.info(kpis)\\\\\\\",\\\\\\\"count\\\\\\\":0,\\\\\\\"error\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"code\\\\\\\",\\\\\\\"ischecked\\\\\\\":true}]\\\",\\\"pipeline_content\\\":\\\"\\\\\\\"import pandas as pd\\\\\\\\nimport numpy as np\\\\\\\\nfrom datetime import datetime, timedelta\\\\\\\\nimport logging\\\\\\\\n\\\\\\\\n\\\\\\\\ndef generate_sales_data(num_records=1000):\\\\\\\\n    np.random.seed(0)  # For reproducibility\\\\\\\\n    dates = [datetime.now() - timedelta(days=i) for i in range(num_records)]\\\\\\\\n    product_ids = np.random.randint(1000, 2000, num_records)\\\\\\\\n    quantities = np.random.randint(1, 10, num_records)\\\\\\\\n    unit_price = np.random.uniform(10, 500, num_records)\\\\\\\\n    customer_ids = np.random.randint(10000, 20000, num_records)\\\\\\\\n\\\\\\\\n\\\\\\\\n    data = {\\\\\\\\n        'Date': dates,\\\\\\\\n        'ProductID': product_ids,\\\\\\\\n        'Quantity': quantities,\\\\\\\\n        'UnitPrice': unit_price,\\\\\\\\n        'CustomerID': customer_ids\\\\\\\\n        # ... add other columns here\\\\\\\\n    }\\\\\\\\n\\\\\\\\n    df = pd.DataFrame(data)\\\\\\\\n    return df\\\\\\\\n\\\\\\\\n\\\\\\\\ndef clean_data(df):\\\\\\\\n\\\\\\\\n    df = df[df['UnitPrice'] > 0]\\\\\\\\n\\\\\\\\n    return df\\\\\\\\n\\\\\\\\n\\\\\\\\ndef transform_data(df):\\\\\\\\n    df['TotalSales'] = df['Quantity'] * df['UnitPrice']\\\\\\\\n\\\\\\\\n    return df\\\\\\\\n\\\\\\\\n\\\\\\\\ndef calculate_kpis(df):\\\\\\\\n    total_sales = df['TotalSales'].sum()\\\\\\\\n    average_sales_per_item = df['TotalSales'].mean()\\\\\\\\n    \\\\\\\\n    sales_growth = df['TotalSales'].pct_change().mean() * 100\\\\\\\\n\\\\\\\\n    kpis = {\\\\\\\\n        'Total Sales': total_sales,\\\\\\\\n        'Average Sales per Item': average_sales_per_item,\\\\\\\\n        'Sales Growth': sales_growth\\\\\\\\n    }\\\\\\\\n    return kpis\\\\\\\\n\\\\\\\\ndef main():\\\\\\\\n    sales_data = generate_sales_data()\\\\\\\\n    cleaned_data = clean_data(sales_data)\\\\\\\\n    transformed_data = transform_data(cleaned_data)\\\\\\\\n    kpis = calculate_kpis(transformed_data)\\\\\\\\n    logging.info(\\\\\\\\\\\\\\\"=============\\\\\\\\\\\\\\\")\\\\\\\\n    print(kpis)\\\\\\\\n    logging.info(kpis)\\\\\\\"\\\",\\\"externalLibraries\\\":\\\"[]\\\"}\",\"type\":2,\"isScheduled\":null,\"isImported\":2,\"path\":\"Repo/himanshu_test.ipynb\",\"uuid\":\"46251706022704195\"},{\"migrationId\":null,\"id\":127860924,\"projectId\":127795219,\"spaceKey\":\"4625\",\"notebookName\":\"names.ipynb\",\"data\":\"{\\\"Algorithms\\\":[],\\\"filename\\\":\\\"names.ipynb\\\",\\\"last_modified_date\\\":\\\"\\\",\\\"isScheduled\\\":0,\\\"datasets\\\":[],\\\"kernalID\\\":\\\"a84765d6-2c30-405c-b1b1-8d2e4352d8b1\\\",\\\"uncheckeddatasets\\\":[]}\",\"description\":null,\"createdDate\":1706017830431,\"lastUpdatedDate\":1706017851143,\"createdBy\":117080066,\"updatedBy\":117080066,\"status\":1,\"committedBy\":117080066,\"lastcommittedDate\":1706017830431,\"isShared\":null,\"customComponentscript\":null,\"type\":1,\"isScheduled\":null,\"isImported\":2,\"path\":\"Repo/names.ipynb\",\"uuid\":\"46251706017830607\"},{\"migrationId\":null,\"id\":127860922,\"projectId\":127795219,\"spaceKey\":\"4625\",\"notebookName\":\"main.ipynb\",\"data\":\"{\\\"datasets\\\":\\\"[]\\\"}\",\"description\":\"gitsync notebook\",\"createdDate\":1706015419823,\"lastUpdatedDate\":1706015420015,\"createdBy\":117080066,\"updatedBy\":117080066,\"status\":1,\"committedBy\":null,\"lastcommittedDate\":null,\"isShared\":null,\"customComponentscript\":null,\"type\":1,\"isScheduled\":null,\"isImported\":2,\"path\":\"Repo/main.ipynb\",\"uuid\":\"46251706015420015\"},{\"migrationId\":null,\"id\":127860921,\"projectId\":127795219,\"spaceKey\":\"4625\",\"notebookName\":\"sales.ipynb\",\"data\":\"{\\\"datasets\\\":\\\"[]\\\"}\",\"description\":\"gitsync notebook\",\"createdDate\":1706015419615,\"lastUpdatedDate\":1706015419808,\"createdBy\":117080066,\"updatedBy\":117080066,\"status\":1,\"committedBy\":null,\"lastcommittedDate\":null,\"isShared\":null,\"customComponentscript\":null,\"type\":1,\"isScheduled\":null,\"isImported\":2,\"path\":\"Repo/sales.ipynb\",\"uuid\":\"46251706015419808\"}]","preparation":[]}}